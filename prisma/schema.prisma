// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int     @id @default(autoincrement())
  user_name        String  @db.VarChar(50)
  first_name       String  @db.VarChar(50)
  last_name        String  @db.VarChar(50)
  gender           Int
  city             String? @db.VarChar(100)
  district         String? @db.VarChar(150)
  address_detail   String? @db.VarChar(200)
  email            String  @db.VarChar(100)
  password         String
  birth_year       Int?
  avatar           String?
  phone            String? @db.VarChar(15)
  operating_status Boolean

  // Foreign key
  role_id Int
  role    Role  @relation(fields: [role_id], references: [id])
  Pet     Pet[]

  clinic clinic?
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(20)
  User User[]
}

model Pet {
  id      Int    @id @default(autoincrement())
  name    String
  species String
  breed   String
  gender  Int
  age     Int
  weight  Int

  // Foreign key
  owner_id Int
  owner    User @relation(fields: [owner_id], references: [id])

  pet_condition pet_condition?
}

model appointment {
  id               Int      @id @default(autoincrement())
  name             String   @db.VarChar(100)
  email            String   @db.VarChar(100)
  phone            String?  @db.VarChar(15)
  appointment_time DateTime
  service_package  String
  status           String
}

model pet_condition {
  id                      Int    @id @default(autoincrement())
  meal                    String @db.Text
  manifestation           String @db.Text
  condition_of_defecation String @db.Text
  vet_advice              String @db.Text

  // Foreign key
  pet_id Int @unique
  pet    Pet @relation(fields: [pet_id], references: [id])
}

model clinic {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(100)
  city           String @db.VarChar(50)
  district       String @db.VarChar(100)
  address_detail String @db.VarChar(100)

  // Foreign key
  vet_id Int  @unique
  vet    User @relation(fields: [vet_id], references: [id])
}
